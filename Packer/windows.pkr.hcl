source "azure-arm" "autogenerated_1" {
  azure_tags = {
    dept = "Engineering"
    task = "Image deployment"
  }
  build_resource_group_name         = "packer-rg"
  client_id                         = "b6fa2007-8c66-49jlksjlkjsljsecf66"
  client_secret                     = "B1t8Q~rsuFmkxY9~jjhkjhkjhkjhkj7"
  communicator                      = "winrm"
  image_offer                       = "WindowsServer"
  image_publisher                   = "MicrosoftWindowsServer"
  image_sku                         = "2019-Datacenter"
  managed_image_name                = "MyPackerImage1"
  managed_image_resource_group_name = "packer-rg"
  os_type                           = "Windows"
  subscription_id                   = "2b8a80dmdlklkdjkljdf80-3d669513f4ba"
  tenant_id                         = "342djjl;k;0kkdkd-d56b52a75c42"
  vm_size                           = "Standard_D2_v2"
  winrm_insecure                    = true
  winrm_timeout                     = "5m"
  winrm_use_ssl                     = true
  winrm_username                    = "packer"
  winrm_password                    = "PackerPass12$$"
}

build {
  sources = ["source.azure-arm.autogenerated_1"]
  

  provisioner "powershell" {
    inline = [
        "Add-WindowsFeature Web-Server", 
        "while ((Get-Service RdAgent).Status -ne 'Running') { Start-Sleep -s 5 }", 
        "while ((Get-Service WindowsAzureGuestAgent).Status -ne 'Running') { Start-Sleep -s 5 }", 
        "& $env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /quiet /quit", "while($true) { $imageState = Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\State | Select ImageState; if($imageState.ImageState -ne 'IMAGE_STATE_GENERALIZE_RESEAL_TO_OOBE') { Write-Output $imageState.ImageState; Start-Sleep -s 10  } else { break } }",
        #"Add-WindowsCapability -Online -Name UpdateServices.AdministrationTools~~~~0.0.1.0"
        #"Install-WindowsUpdate -AcceptAll -AutoReboot"
        ]
  }

  provisioner "powershell" {
    elevated_user     = "packer"
    elevated_password = "PackerPass12$$"
    execute_command = "powershell -executionpolicy bypass \"& { if (Test-Path variable:global:ProgressPreference){\\$ProgressPreference='SilentlyContinue'};. {{.Vars}}; &'{{.Path}}'; exit \\$LastExitCode }\""
    script = "windows-update.ps1"
  }

  provisioner "powershell" {
    elevated_user     = "packer"
    elevated_password = "PackerPass12$$"
    execute_command = "powershell -executionpolicy bypass \"& { if (Test-Path variable:global:ProgressPreference){\\$ProgressPreference='SilentlyContinue'};. {{.Vars}}; &'{{.Path}}'; exit \\$LastExitCode }\""
    script = "windows-update-history.ps1"
  }

}
